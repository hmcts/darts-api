openapi: 3.0.1
info:
  version: ${version}
  title: Modernised DARTS
  description: |-
    Modernised DARTS (Digital Audio Recording and Transcription Service).
servers:
  - url: http://localhost:4550/
paths:
  /admin/courthouses:
    post:
      tags:
        - Courthouses
      summary: Adds a courthouse record with supplied details.
      requestBody:
        $ref: '#/components/requestBodies/CourthousePost'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendedCourthousePost'
        '400':
          description: A required parameter is missing or an invalid datatype or value was provided for property.
        '409':
          description: Resource already exists.
        '500':
          description: Internal Server Error
  /courthouses:
    get:
      tags:
        - Courthouses
      summary: Gets all courthouse records.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourtList'
        '500':
          description: Internal Server Error
  /admin/regions:
    get:
      tags:
        - Courthouses
      summary: Gets all regions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRegionList'
        '500':
          description: Internal Server Error
  /admin/courthouses/{courthouse_id}:
    get:
      tags:
        - Courthouses
      summary: Get a courthouse record with specified id.
      parameters:
        - in: path
          name: courthouse_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCourthouse'
        '400':
          description: A required parameter is missing or an invalid datatype or value was provided for property.
        '403':
          description: Forbidden Error
          content:
            application/json+problem:
              schema:
                allOf:
                  - $ref: './problem.yaml'
                  - type: object
                    required:
                      - type
                    properties:
                      type:
                        $ref: '#/components/schemas/UserAuthorisation403_109ErrorCode'
              example:
                type: AUTHORISATION_109
                title: User is not authorised for this endpoint
                status: 403
        '404':
          description: Resource with the provided id does not exist.
        '500':
          description: Internal Server Error
    patch:
      operationId: updateCourthouse
      summary: Update an existing courthouse record.
      tags:
        - Courthouses
      parameters:
        - in: path
          name: courthouse_id
          schema:
            type: integer
          required: true
      requestBody:
        $ref: '#/components/requestBodies/CourthousePatch'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminCourthouse'
        # *** error responses ***
components:
  requestBodies:
    CourthousePost:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CourthousePost'
    CourthousePatch:
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CourthousePatch'
  schemas:
    Courthouse:
      type: object
      required:
        - courthouse_name
        - display_name
      properties:
        courthouse_name:
          type: string
        code:
          type: integer
        display_name:
          type: string
        region_id:
          type: integer
          example: 0
    CourthousePost:
      type: object
      required:
        - courthouse_name
        - display_name
      properties:
        courthouse_name:
          type: string
        display_name:
          type: string
        region_id:
          type: integer
          example: 0
        security_group_ids:
          type: array
          items:
            type: integer
          example: [1, 2]
    CourthousePatch:
      type: object
      properties:
        courthouse_name:
          type: string
        display_name:
          type: string
        region_id:
          type: integer
          example: 0
        security_group_ids:
          type: array
          items:
            type: integer
          example: [ 1, 2 ]
    AdminRegion:
      type: object
      properties:
        id:
          type: integer
          example: 0
        name:
          type: string
    AdminRegionList:
      type: array
      items:
        $ref: '#/components/schemas/AdminRegion'
    AdminCourthouse:
      allOf:
        - $ref: '#/components/schemas/ExtendedCourthouse'
        - type: object
          properties:
            region_id:
              type: integer
              example: 0
            security_group_ids:
              type: array
              items:
                type: integer
              example: [1, 2]
            has_data:
              type: boolean
              description: Indicates whether the courthouse has related cases or hearings

    ExtendedCourthouse:
      allOf:
        - $ref: '#/components/schemas/Courthouse'
        - type: object
          properties:
            id:
              type: integer
            created_date_time:
              type: string
              format: date-time
            last_modified_date_time:
              type: string
              format: date-time
    ExtendedCourthousePost:
      allOf:
        - $ref: '#/components/schemas/CourthousePost'
        - type: object
          properties:
            id:
              type: integer
            created_date_time:
              type: string
              format: date-time
            last_modified_date_time:
              type: string
              format: date-time

    CourtList:
      type: array
      items:
        $ref: '#/components/schemas/ExtendedCourthouse'

    CourthouseErrorCode:
      type: string
      enum:
        - "COURTHOUSE_100"
        - "COURTHOUSE_101"
        - "COURTHOUSE_102"
        - "COURTHOUSE_103"
        - "COURTHOUSE_104"
        - "COURTHOUSE_105"
        - "COURTHOUSE_106"
        - "COURTHOUSE_107"
      x-enum-varnames: [
        COURTHOUSE_NAME_PROVIDED_ALREADY_EXISTS,
        COURTHOUSE_CODE_PROVIDED_ALREADY_EXISTS,
        COURTHOUSE_NOT_FOUND,
        COURTHOUSE_DISPLAY_NAME_PROVIDED_ALREADY_EXISTS,
        ONLY_TRANSCRIBER_ROLES_MAY_BE_ASSIGNED,
        REGION_ID_DOES_NOT_EXIST,
        SECURITY_GROUP_ID_DOES_NOT_EXIST,
        COURTHOUSE_NAME_CANNOT_BE_CHANGED_CASES_EXISTING]

    CourthouseTitleErrors:
      type: string
      enum:
        - "Provided courthouse name already exists."
        - "Provided courthouse code already exists."
        - "Courthouse with provided ID does not exist."
        - "Provided courthouse display name already exists."
        - "Only TRANSCRIBER roles may be assigned"
        - "Region ID does not exist"
        - "Security group ID does not exist"
        - "The courthouse name cannot be change because it has existing cases."
      x-enum-varnames: [
        COURTHOUSE_NAME_PROVIDED_ALREADY_EXISTS,
        COURTHOUSE_CODE_PROVIDED_ALREADY_EXISTS,
        COURTHOUSE_NOT_FOUND,
        COURTHOUSE_DISPLAY_NAME_PROVIDED_ALREADY_EXISTS,
        ONLY_TRANSCRIBER_ROLES_MAY_BE_ASSIGNED,
        REGION_ID_DOES_NOT_EXIST,
        SECURITY_GROUP_ID_DOES_NOT_EXIST,
        COURTHOUSE_NAME_CANNOT_BE_CHANGED_CASES_EXISTING]

    UserAuthorisation403_109ErrorCode:
      type: string
      enum:
        - "AUTHORISATION_109"
      x-enum-varnames: [ USER_NOT_AUTHORISED_FOR_ENDPOINT ]
