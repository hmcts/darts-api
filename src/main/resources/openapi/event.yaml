openapi: 3.0.1

info:

  version: ${version}
  title: Modernised DARTS
  description: |-
    Modernised DARTS (Digital Audio Recording and Transcription Service).

servers:
  - url: http://localhost:4550/

paths:
  /events:
    post:
      tags:
        - Event
      summary: An Endpoint which allows users to request and submit events.
      description: |-
        Event data received from XHIBIT and CPP through a custom web service to add context to the audio recordings it stores.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DartsEvent'
            examples:
              example1:
                summary: Case called on
                value:
                  message_id: '18422'
                  type: '10100'
                  sub_type: '10100'
                  event_id: '001'
                  courthouse: SNARESBROOK
                  courtroom: '1'
                  case_numbers:
                    - A20230049
                  date_time: '2023-06-14T08:37:30.945Z'
              example2:
                summary: Freetext
                value:
                  message_id: '18422'
                  type: '21300'
                  sub_type: '21300'
                  event_id: '002'
                  courthouse: SNARESBROOK
                  courtroom: '1'
                  case_numbers:
                    - T20190441
                  event_text: 'test'
                  date_time: '2023-06-14T08:37:30.945Z'
              example3:
                summary: Life Imprisonment
                value:
                  message_id: '18422'
                  type: '40750'
                  sub_type: '11504'
                  event_id: '003'
                  courthouse: SNARESBROOK
                  courtroom: '1'
                  case_numbers:
                    - T20190441
                  event_text: '[Defendant: DEFENDANT ONE]'
                  date_time: '2023-06-14T08:37:30.945Z'
                  retention_policy:
                    CaseRetentionFixedPolicy: 4
                    CaseTotalSentence: 26Y0M0D

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsResponse'

        '400':
          description: Bad Request- Invalid XML Document
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

        '404':
          description: Not Found - Courthouse not found
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              examples:
                example1:
                  summary: Not in database
                  description: type+subType has not been found in the database
                  value:
                    type: EVENT_101
                    title: No event handler mapping found in database
                    status: 404
                    detail: "No event handler could be found for messageId: 100 type: 407301 and subtype: 108081"

        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

  /courtlogs:
    get:
      tags:
        - Event
      summary: An Endpoint which allows users to request event courtlogs
      description: |-
        An Endpoint which allows users to request courtlogs using courthouse, casenumber, startdate and enddate
      parameters:
        - in: query
          name: courthouse
          schema:
            type: string
          required: true
        - in: query
          name: case_number
          schema:
            type: string
          required: true
        - in: query
          name: start_date_time
          schema:
            type: string
            format: date-time
          required: true
        - in: query
          name: end_date_time
          schema:
            type: string
            format: date-time
          required: true


      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourtLogs'

        '404':
          description: Not Found - Courthouse not found
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'


    post:
      tags:
        - Event
      summary: An Endpoint which allows users to create a court log event.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourtLogsPostRequestBody'
            examples:
              example1:
                summary: Request with single case
                value:
                  log_entry_date_time: '2023-05-23T09:15:25Z'
                  courthouse: CARDIFF
                  courtroom: '1'
                  case_numbers:
                    - CASE1001
                  text: 'System : Start Recording : Record: Case Code:0008, New Case'
              example2:
                summary: Request with multiple cases
                value:
                  log_entry_date_time: '2023-05-23T09:15:25Z'
                  courthouse: CARDIFF
                  courtroom: '1'
                  case_numbers:
                    - CASE1001
                    - CASE1002
                  text: 'System : Start Recording : Record: Case Code:0008, New Case'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsResponse'

        '400':
          description: Bad Request- Invalid XML Document
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

        '404':
          description: Not Found - Courthouse not found
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

  /admin/event-mappings:
    get:
      tags:
        - Event
      summary: All event mappings
      operationId: adminGetEventMappings
      description: |-
        An Endpoint which allows admin users to request a list of all event mappings

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventMappings'
        '403':
          description: Forbidden Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
    post:
      tags:
        - Event
      summary: An Endpoint which allows users to add event mappings.
      operationId: adminPostEventMapping
      parameters:
        - in: query
          name: is_revision
          required: false
          schema:
            type: boolean
            default: false
          description: "parameter to indicate if the request is an update to an existing mapping"
      description: |-
        Events in DARTS are mapped to handlers. This endpoint creates a new event mapping or creates a new revision of an existing mapping.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventMapping'
            examples:
              example1:
                summary: Event mapping
                value:
                  type: 10100,
                  sub_type: 1010,
                  name: My event,
                  handler: Standard Event Handler,
                  has_restrictions: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventMapping'

        '400':
          description: Bad Request- Invalid XML Document
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

        '409':
          description: Duplicate event mapping request
          content:
            application/json+problem:
              schema:
                allOf:
                  - $ref: './problem.yaml'
                  - type: object
                    required:
                      - type
                    properties:
                      type:
                        $ref: '#/components/schemas/EventErrorCode'
                      duplicate_event_mapping_id:
                        type: integer
                        example: 1

        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

  /admin/event-mappings/{event_handler_id}:
    get:
      tags:
        - Event
      summary: An Endpoint which allows admin users to request an event mapping
      operationId: adminGetEventMappingById
      description: |-
        An Endpoint which allows admin users to request an event mapping using event handler id
      parameters:
        - in: path
          name: event_handler_id
          schema:
            type: integer
          description: "event_handler_id is the internal event handler id for the handler."
          required: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventMapping'
        '403':
          description: Forbidden Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
        '404':
          description: Not Found - Event mapping not found
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              example:
                type: "EVENT_MAPPING_REQUEST_101"
                title: "The requested event mapping cannot be found"
                status: 404
        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
    delete:
      tags:
        - Event
      summary: An Endpoint which allows admin users to delete an event mapping
      operationId: adminDeleteEventMappings
      description: |-
        An Endpoint which allows admin users to delete an event mapping using event handler id
      parameters:
        - in: path
          name: event_handler_id
          schema:
            type: integer
          description: "event_handler_id is the internal event handler id for the handler."
          required: true

      responses:
        '200':
          description: OK
        '403':
          description: Forbidden Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              example:
                type: "AUTHORISATION_109"
                title: "User is not authorised for this endpoint"
                status: 403
        '404':
          description: Not Found - Event mapping not found
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              example:
                type: "EVENT_101"
                title: "No event handler mapping found in database"
                status: 404
                detail: "No event handler could be found in the database for event handler id: 123."
        '409':
          description: The mapping is inactive, so cannot be deleted.
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              examples:
                inactive:
                  summary: Inactive
                  description: The event handler mapping is marked as inactive
                  value:
                    type: "EVENT_105"
                    title: "The mapping is inactive, so cannot be deleted"
                    status: 409
                    detail: Event handler mapping 379 cannot be deleted because it is inactive.
                has_events:
                  summary: Has Events
                  description: The event handler has processed events
                  value:
                    type: "EVENT_106"
                    title: "The mapping has already processed events, so cannot be deleted"
                    status: 409
                    detail: Event handler mapping 10 already has processed events, so cannot be deleted.
        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

  /admin/event-handlers:
    get:
      tags:
        - Event
      summary: All event handlers
      operationId: adminGetEventHandlers
      description: |-
        An Endpoint which allows admin users to request a list of all event handler names that exist

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventHandlers'
        '403':
          description: Forbidden Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'


  /admin/events/search:
    post:
      tags:
        - Event
      summary: An Endpoint which allows admins to search for events.
      operationId: adminSearchEvents
      description: |-
        This endpoint allows admins to search the events database by providing none | some | all valid search criteria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminEventSearch'
            examples:
              example1:
                summary: Event mapping
                value:
                  type: 10100,
                  sub_type: 1010,
                  name: My event,
                  handler: Standard Event Handler,
                  has_restrictions: true

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminSearchEventResponseResult'

        '400':
          description: Too many results
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
  /admin/events/{event_id}:
    get:
      tags:
        - Event
      summary: Gets an event id details
      description: |-
        Retrieves an event for a given event_id
      operationId: adminGetEventById
      parameters:
        - in: path
          name: event_id
          schema:
            type: integer
          description: "event_id is the internal event_id of the event."
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminGetEventForIdResponseResult'
        '404':
          description: Not Found - Event id
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
  /admin/events/obfuscate:
    post:
      tags:
        - Event
      summary: Obfuscate event text
      description: |-
        Obfuscate event text
      operationId: adminObfuscateEveByIds
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - eve_ids
              properties:
                eve_ids:
                  minLength: 1
                  type: array
                  items:
                    type: integer
      responses:
        '204':
          description: NO_CONTENT
        '404':
          description: Not Found - Event id
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
components:
  schemas:

    ###################################################################################################################
    # TOP-LEVEL MODELS
    ###################################################################################################################

    CourtLogsPostRequestBody:
      type: object
      properties:
        log_entry_date_time:
          type: string
          format: date-time
        courthouse:
          $ref: '#/components/schemas/Courthouse'
        courtroom:
          $ref: '#/components/schemas/Courtroom'
        case_numbers:
          type: array
          items:
            $ref: '#/components/schemas/CaseNumber'
          minItems: 1
        text:
          type: string
          maxLength: 256
      required:
        - log_entry_date_time
        - courthouse
        - courtroom
        - case_numbers
        - text

    CourtLog:
      type: object
      properties:
        courthouse:
          $ref: '#/components/schemas/Courthouse'
        caseNumber:
          type: string
        timestamp:
          type: string
          format: date-time
        eventText:
          type: string
      required:
        - courthouse
        - caseNumber
        - timestamp
        - eventText
    CourtLogs:
      type: array
      items:
        $ref: '#/components/schemas/CourtLog'

    DartsEvent:
      type: object
      properties:
        message_id:
          type: string
        type:
          type: string
        sub_type:
          type: string
        event_id:
          type: string
        courthouse:
          $ref: '#/components/schemas/Courthouse'
        courtroom:
          $ref: '#/components/schemas/Courtroom'
        case_numbers:
          type: array
          items:
            $ref: '#/components/schemas/CaseNumber'
        event_text:
          type: string
        date_time:
          type: string
          format: date-time
        retention_policy:
          type: object
          properties:
            case_retention_fixed_policy:
              type: string
            case_total_sentence:
              type: string
        start_time:
          type: string
          format: date-time
        end_time:
          type: string
          format: date-time
        is_mid_tier:
          type: boolean
          default: false

    EventsResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string

    EventMappings:
      type: array
      items:
        $ref: '#/components/schemas/EventMapping'

    EventMapping:
      type: object
      required:
        - type
        - name
        - has_restrictions
      properties:
        id:
          type: integer
        type:
          type: string
          minLength: 1
          maxLength: 256
        sub_type:
          type: string
          minLength: 1
          maxLength: 256
        name:
          type: string
          minLength: 1
          maxLength: 256
        handler:
          type: string
        is_active:
          type: boolean
        has_restrictions:
          type: boolean
        created_at:
          type: string
          format: date-time
          example: "2024-05-09T14:26:31.118Z"
        has_events:
          type: boolean

    EventHandlers:
      type: array
      items:
        $ref: '#/components/schemas/EventHandler'

    EventHandler:
      type: string

    AdminEventSearch:
      type: object
      properties:
        courthouse_ids:
          type: array
          items:
            type: integer
        case_number:
          type: string
        courtroom_name:
          type: string
        hearing_start_at:
          type: string
          format: date
          example: "2024-05-09"
        hearing_end_at:
          type: string
          format: date
          example: "2024-05-09"

    AdminSearchEventResponseResult:
      type: object
      properties:
        id:
          type: integer
        event_ts:
          type: string
          format: date-time
        name:
          type: string
        text:
          type: string
        is_event_anonymised:
          type: boolean
        is_case_expired:
          type: boolean
        case_expired_at:
          type: string
          format: date-time
        courthouse:
          type: object
          properties:
            id:
              type: integer
            display_name:
              type: string
        courtroom:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string


    ###################################################################################################################
    # PRIMITIVES
    ###################################################################################################################

    CaseNumber:
      type: string
      maxLength: 25

    Courthouse:
      type: string
      maxLength: 50

    Courtroom:
      type: string
      maxLength: 25

    CourthouseResponseDetails:
      type: object
      properties:
        id:
          type: integer
        display_name:
          type: string

    CourtroomResponseDetails:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    EventMappingDetails:
      type: object
      properties:
        id:
          type: integer

    AdminGetEventForIdResponseResult:
      type: object
      properties:
        id:
          type: integer
        documentum_id:
          type: string
        source_id:
          type: integer
        message_id:
          type: string
        text:
          type: string
        event_mapping:
          $ref: '#/components/schemas/EventMappingDetails'
        is_log_entry:
          type: boolean
        courthouse:
          $ref: '#/components/schemas/CourthouseResponseDetails'
        courtroom:
          $ref: '#/components/schemas/CourtroomResponseDetails'
        version:
          type: string
        chronicle_id:
          type: string
        antecedent_id:
          type: string
        is_data_anonymised:
          type: boolean
        event_ts:
          type: string
          format: date-time
        is_current:
          type: boolean
        created_at:
          type: string
          format: date-time
        created_by:
          type: integer
        last_modified_at:
          type: string
          format: date-time
        last_modified_by:
          type: integer

    GetCourtLogsErrorCode:
      type: string
      enum:
        - "GET_COURTLOG_101"
        - "GET_COURTLOG_102"
      x-enum-varnames: [ COURTLOG_COURT_HOUSE_NOT_FOUND ]

    PostCourtLogsErrorCode:
      type: string
      enum:
        - "ADD_COURTLOG_101"
        - "ADD_COURTLOG_102"
        - "ADD_COURTLOG_103"
      x-enum-varnames: [ COURTLOG_COURT_HOUSE_NOT_FOUND, COURTLOG_DOCUMENT_CANT_BE_PARSED ]

    EventErrorCode:
      type: string
      enum:
        - "EVENT_100"
        - "EVENT_101"
        - "EVENT_102"
        - "EVENT_103"
        - "EVENT_104"
        - "EVENT_105"
        - "EVENT_106"
        - "EVENT_107"
        - "EVENT_108"
        - "EVENT_109"
      x-enum-varnames: [
        EVENT_DATA_NOT_FOUND,
        EVENT_HANDLER_NOT_FOUND_IN_DB,
        DUPLICATE_EVENT_MAPPING,
        NO_EVENT_MAPPING,
        INVALID_HANDLER_MAPPING_NAME,
        MAPPING_INACTIVE,
        MAPPING_IN_USE,
        TOO_MANY_RESULTS,
        EVENT_ID_NOT_FOUND,
        ALREADY_OBFUSCATED
      ]

    EventTitleErrors:
      type: string
      enum:
        - "Data on the event could not be reconciled with Darts records"
        - "No event handler mapping found in database"
        - "Event mapping already exists in database"
        - "Event mapping not found in database"
        - "Handler name does not exist"
        - "The mapping is inactive, so cannot be deleted"
        - "The mapping has already processed events, so cannot be deleted"
        - "The search resulted in too many results"
        - "Event id does not exist"
        - "This event is already obfuscated"
      x-enum-varnames: [
        EVENT_DATA_NOT_FOUND,
        EVENT_HANDLER_NOT_FOUND_IN_DB,
        DUPLICATE_EVENT_MAPPING,
        NO_EVENT_MAPPING,
        INVALID_HANDLER_MAPPING_NAME,
        MAPPING_INACTIVE,
        MAPPING_IN_USE,
        TOO_MANY_RESULTS,
        EVENT_ID_NOT_FOUND,
        ALREADY_OBFUSCATED ]