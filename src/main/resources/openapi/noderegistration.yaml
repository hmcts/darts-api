openapi: 3.0.1
info:
  version: ${version}
  title: Modernised DARTS
  description: |-
    Modernised DARTS (Digital Audio Recording and Transcription Service).
servers:
  - url: http://localhost:4550/
paths:
  /register-devices:
    post:
      tags:
        - Devices
      summary: Registers a device on the network
      description: |-
        Description
      parameters:
        - in: query
          name: node_type
          schema:
            type: string
            minLength: 1
          description: ""
          required: true
        - in: query
          name: courthouse
          schema:
            type: string
            minLength: 1
          description: ""
          required: true
        - in: query
          name: courtroom
          schema:
            type: string
            minLength: 1
          description: ""
          required: true
        - in: query
          name: host_name
          schema:
            type: string
            minLength: 1
          description: ""
          required: true
        - in: query
          name: ip_address
          schema:
            type: string
            minLength: 1
          description: ""
          required: true
        - in: query
          name: mac_address
          schema:
            type: string
            minLength: 1
          description: ""
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostNodeRegistrationResponse'

        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
        '422':
          description: Business Validation Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml' 
        '400':
          description: A required parameter is missing or an invalid datatype or value was provided for property.
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              example:
                type: "COMMON_100"
                title: "Courthouse 'SWANSEA1' not found."
                status: 400
  /admin/node-register-management:
    get:
      tags:
        - Devices
      summary: Get node registration details
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetNodeRegisterManagementResponse'
        '404':
          description: Not Found
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
components:
  schemas:
    PostNodeRegistrationResponse:
      type: object
      properties:
        node_id:
          description: ID of the registered device.
          type: integer
          example: 42

    GetNodeRegisterManagementResponse:
      type: object
      properties:
        id:
          type: integer
          description: 'The node id'
        courthouse:
          type: object
          properties:
            id:
              type: integer
              description: 'The courthouse id'
            display_name:
              type: string
              description: 'The courthouse display name'
        courtroom:
          type: object
          description: 'The courtroom related details'
          properties:
            id:
              type: integer
              description: 'The courtroom id'
            name:
              type: string
              description: 'The courtroom display name'
        ip_address:
          type: string
        hostname:
          type: string
        mac_address:
          type: string
        node_type:
          type: string
        created_at:
          type: string
          format: date-time
        created_by:
          type: integer

    NoDeregistrationErrorCode:
      type: string
      enum:
        - "INVALID_COURTROOM_100"
      x-enum-varnames: [INVALID_COURTROOM]

    NoDeregistrationTitleErrors:
      type: string
      enum:
        - "Could not find the courtroom."
      x-enum-varnames: [INVALID_COURTROOM]

