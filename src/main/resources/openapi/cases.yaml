openapi: 3.0.1

info:

  version: ${version}
  title: Modernised DARTS
  description: |-
    Modernised DARTS (Digital Audio Recording and Transcription Service).

servers:
  - url: http://localhost:4550/


paths:
  /cases:
    get:
      tags:
        - Cases
      summary: Allows the retrieval of all scheduled cases/hearings for a given courthouse, courtroom and date
      parameters:
        - in: query
          name: courthouse
          schema:
            type: string
          description: "The name of the courthouse"
          example: "SWANSEA"
          required: true
        - in: query
          name: courtroom
          schema:
            type: string
          description: "The name of the courtroom"
          example: "1"
          required: true
        - in: query
          name: date
          schema:
            type: string
            format: date
          description: "The date to get the cases for. Normally today"
          example: 2023-06-22
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cases'

        '400':
          description: A required parameter is missing or an invalid datatype or value was provided for property.
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              example:
                type: "COMMON_100"
                title: "Provided courthouse does not exist"
                status: 400
                detail: "Courthouse '' not found."

        '404':
          description: Not Found
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
  /cases/addCase:
    post:
      tags:
        - Cases
      summary: Allows user to add case or if the case exists update the details.
      description: |-
        Allows user to add case or if the case exists update the details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_case_request'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_case_response'

        '400':
          description: Bad Request - Invalid XML Document
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

        '404':
          description: Not Found - Courthouse not found
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
  /cases/addDocument:
    post:
      tags:
        - Cases
      summary: Allows user to add case or if the case exists update the details.
      description: |-
        Allows user to add case or if the case exists update the details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_case_request'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post_case_response'

        '400':
          description: Bad Request - Invalid XML Document
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

        '404':
          description: Not Found - Courthouse not found
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'


  /cases/{case_id}:
    get:
      tags:
        - Cases
      summary: Allows the retrieval of a single case using a given case_id
      description: |-
        Retrieves a single case for a given case_id
      parameters:
        - in: path
          name: case_id
          schema:
            type: integer
          description: "case_id is the internal cas_id of the case."
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/single_case'
        '401':
          description: Unauthorised Error
        '403':
          description: Forbidden Error
          content:
            application/json+problem:
              schema:
                allOf:
                  - $ref: './problem.yaml'
                  - type: object
                    required:
                      - type
                    properties:
                      type:
                        $ref: '#/components/schemas/CasesAuthorisation403ErrorCode'
              example:
                type: "AUTHORISATION_100"
                title: "User is not authorised for the associated courthouse"
                status: 403
        '404':
          description: Not Found Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              example:
                type: "CASE_104"
                title: "The requested case cannot be found"
                status: 404
  /cases/{case_id}/hearings:
    get:
      tags:
        - Cases
      summary: Allows the retrieval of hearings for a given case_id
      description: |-
        Retrieves all hearings for a case_id.
      parameters:
        - in: path
          name: case_id
          schema:
            type: integer
          description: "case_id is the internal cas_id of the case."
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/hearings'
        '401':
          description: Unauthorised Error
        '403':
          description: Forbidden Error
          content:
            application/json+problem:
              schema:
                allOf:
                  - $ref: './problem.yaml'
                  - type: object
                    required:
                      - type
                    properties:
                      type:
                        $ref: '#/components/schemas/CasesAuthorisation403ErrorCode'
              example:
                type: "AUTHORISATION_100"
                title: "User is not authorised for the associated courthouse"
                status: 403
        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

  /cases/{case_id}/events:
    get:
      tags:
        - Cases
      summary: Allows the retrieval of events for a given case_id
      description: |-
        Retrieves all events for a case_id.
      parameters:
        - in: path
          name: case_id
          schema:
            type: integer
          description: "case_id is the internal cas_id of the case."
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events'
        '401':
          description: Unauthorised Error
        '403':
          description: Forbidden Error
          content:
            application/json+problem:
              schema:
                allOf:
                  - $ref: './problem.yaml'
                  - type: object
                    required:
                      - type
                    properties:
                      type:
                        $ref: '#/components/schemas/CasesAuthorisation403ErrorCode'
              example:
                type: "AUTHORISATION_100"
                title: "User is not authorised for the associated courthouse"
                status: 403
        '404':
          description: Not Found Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              example:
                type: "CASE_104"
                title: "The requested case cannot be found"
                status: 404
        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

  /cases/{case_id}/transcripts:
    get:
      tags:
        - Cases
      summary: Allows the retrieval of transcripts for a given case_id
      description: |-
        Retrieves all transcripts for a case_id.
      parameters:
        - in: path
          name: case_id
          schema:
            type: integer
          description: "case_id is the internal cas_id of the case."
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transcripts'
        '401':
          description: Unauthorised Error
        '403':
          description: Forbidden Error
          content:
            application/json+problem:
              schema:
                allOf:
                  - $ref: './problem.yaml'
                  - type: object
                    required:
                      - type
                    properties:
                      type:
                        $ref: '#/components/schemas/CasesAuthorisation403ErrorCode'
              example:
                type: "AUTHORISATION_100"
                title: "User is not authorised for the associated courthouse"
                status: 403
        '404':
          description: Not Found Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              example:
                type: "CASE_104"
                title: "The requested case cannot be found"
                status: 404
        '500':
          description: Internal Server Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'

  /cases/search:
    post:
      tags:
        - Cases
      summary: |-
        Allows cases to be searched for using partial case numbers, defendant names, etc.
        All string can be partial matches, and case insensitive.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdvancedSearchRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/advancedSearchResult'
        '400':
          description: A required parameter is missing or an invalid datatype or value was provided for property.
        '409':
          description: Resource already exists.
        '500':
          description: Internal Server Error
  /cases/{case_id}/annotations:
    get:
      tags:
        - Cases
      summary: Admin / Judge view for annotations
      operationId: getYourAnnotationsByCaseId
      parameters:
        - in: path
          name: case_id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './hearings.yaml#/components/schemas/annotation'

        '400':
          description: Bad Request Error
        '401':
          description: Unauthorised Error
        '403':
          description: Unauthorised Error
        '404':
          description: Not Found Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              example:
                type: "CASE_104"
                title: "The requested case cannot be found"
                status: 404

  /admin/cases/search:
    post:
      tags:
        - Cases
      summary: |-
        Returns a representation of the court_case table which match the supplied search criteria.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminCasesSearchRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminCasesSearchResponseItem'
        '400':
          description: A required parameter is missing or an invalid datatype or value was provided for property.
        '500':
          description: Internal Server Error

  /admin/cases/{id}:
    get:
      tags:
        - Cases
      summary: |-
        Admin view for court case
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSingleCaseResponseItem'
        '400':
          description: Bad Request Error
        '401':
          description: Unauthorised Error
        '403':
          description: Unauthorised Error
        '404':
          description: Not Found Error
          content:
            application/json+problem:
              schema:
                $ref: './problem.yaml'
              example:
                type: "CASE_104"
                title: "The requested case cannot be found"
                status: 404
components:
  schemas:
    add_case_request:
      type: object
      required:
        - courthouse
        - case_number
      properties:
        courthouse:
          type: string
          example: SWANSEA
        case_number:
          type: string
          example: CASE1001
        case_type:
          type: string
          example: 1
        defendants:
          type: array
          items:
            $ref: '#/components/schemas/defendant'
        judges:
          type: array
          items:
            $ref: '#/components/schemas/judge'
        prosecutors:
          type: array
          items:
            $ref: '#/components/schemas/prosecutor'
        defenders:
          type: array
          items:
            $ref: '#/components/schemas/defence'
    cases:
      type: array
      items:
        $ref: '#/components/schemas/scheduled_case'
    scheduled_case:
      type: object
      required:
        - courthouse
      properties:
        courthouse:
          type: string
          example: SWANSEA
        courtroom:
          type: string
          example: 1
        hearing_date:
          type: string
          format: date
          example: 2023-06-23
        case_number:
          type: string
          example: CASE1001
        scheduled_start:
          type: string
          format: time
          example: 10:00
        defendants:
          type: array
          items:
            $ref: '#/components/schemas/defendant'
        judges:
          type: array
          items:
            $ref: '#/components/schemas/judge'
        prosecutors:
          type: array
          items:
            $ref: '#/components/schemas/prosecutor'
        defenders:
          type: array
          items:
            $ref: '#/components/schemas/defence'
    post_case_response:
      type: object
      properties:
        case_id:
          type: integer
          example: 1001
        courthouse:
          type: string
          example: SWANSEA
        case_number:
          type: string
          example: CASE1001
        defendants:
          type: array
          items:
            $ref: '#/components/schemas/defendant'
        judges:
          type: array
          items:
            $ref: '#/components/schemas/judge'
        prosecutors:
          type: array
          items:
            $ref: '#/components/schemas/prosecutor'
        defenders:
          type: array
          items:
            $ref: '#/components/schemas/defence'
    patch_request_object:
      type: object
      properties:
        retain_until:
          type: string
          format: date-time
    single_case:
      type: object
      required:
        - courthouse
      properties:
        case_id:
          type: integer
          example: 1
        courthouse_id:
          type: integer
          example: 1001
        courthouse:
          type: string
          example: SWANSEA
        case_number:
          type: string
          example: CASE1001
        defendants:
          type: array
          items:
            $ref: '#/components/schemas/defendant'
        judges:
          type: array
          items:
            $ref: '#/components/schemas/judge'
        prosecutors:
          type: array
          items:
            $ref: '#/components/schemas/prosecutor'
        defenders:
          type: array
          items:
            $ref: '#/components/schemas/defence'
        reporting_restrictions:
          $ref: './common.yaml#/components/schemas/reporting_restrictions'
        retain_until_date_time:
          type: string
          format: date-time
          example: 2030-01-31T15:42:10.361Z
        case_closed_date_time:
          type: string
          format: date-time
          example: 2023-07-20T15:42:10.361Z
        retention_date_time_applied:
          type: string
          format: date-time
          example: 2023-07-20T15:42:10.361Z
        retention_policy_applied:
          type: string
          example: "MANUAL"
        is_data_anonymised:
          $ref: '#/components/schemas/IsDataAnonymised'
        data_anonymised_at:
          $ref: '#/components/schemas/DataAnonymisedAt'
    advancedSearchResult:
      type: object
      properties:
        case_id:
          type: integer
          example: 1
          description: Unique case identifier, used internally by DARTS.
        case_number:
          type: string
          example: C20220620001
          description: 'Case Number'
        courthouse:
          type: string
          example: SWANSEA
        defendants:
          type: array
          items:
            $ref: '#/components/schemas/defendant'
        judges:
          type: array
          items:
            $ref: '#/components/schemas/judge'
        reporting_restriction:
          type: string
          example: "Section 4(2) of the Contempt of Court Act 1981"
          description: 'Any reporting restrictions associated with the case.'
        hearings:
          type: array
          items:
            $ref: '#/components/schemas/advancedSearchResultHearing'
        is_data_anonymised:
          $ref: '#/components/schemas/IsDataAnonymised'
        data_anonymised_at:
          $ref: '#/components/schemas/DataAnonymisedAt'
    advancedSearchResultHearing:
      type: object
      properties:
        id:
          type: integer
          example: 1
        date:
          type: string
          format: date
          example: 2022-05-20
        courtroom:
          type: string
          example: 1
        judges:
          type: array
          items:
            $ref: '#/components/schemas/judge'
    events:
      type: array
      items:
        $ref: '#/components/schemas/event'
    event:
      type: object
      properties:
        id:
          type: integer
          example: 1
        hearing_id:
          type: integer
          example: 2
        hearing_date:
          type: string
          format: date
          example: 2024-06-20
        timestamp:
          type: string
          format: date-time
          example: 2024-06-20T10:00:00Z
        name:
          type: string
          example: "Case called on"
        is_data_anonymised:
          $ref: '#/components/schemas/IsDataAnonymised'
        text:
          type: string
          example: "Record:New Case"
    transcripts:
      type: array
      items:
        $ref: '#/components/schemas/transcript'
    transcript:
      type: object
      properties:
        transcription_id:
          type: integer
          example: 1
        hearing_id:
          type: integer
          example: 2
        hearing_date:
          type: string
          format: date
          example: 2022-05-20
        type:
          type: string
          example: "Sentencing remarks"
        requested_on:
          type: string
          format: date-time
          example: 2023-06-20T10:00:00Z
        requested_by_name:
          type: string
          example: "Joe Bloggs"
        status:
          type: string
          example: "Available"
    defendant:
      type: string
      example: Joe Bloggs
    judge:
      type: string
      example: Mr Judge
    prosecutor:
      type: string
      example: Mrs Prosecutor
    defence:
      type: string
      example: Mr Defender
    hearings:
      type: array
      items:
        $ref: '#/components/schemas/hearing'
    hearing:
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
          format: date
        judges:
          type: array
          items:
            $ref: '#/components/schemas/judge'
        courtroom:
          type: string
        transcript_count:
          type: integer

    AdminCasesSearchRequest:
      type: object
      properties:
        courthouse_ids:
          type: array
          items:
            type: integer
        case_number:
          type: string
          example: 1234
          maxLength: 32
        courtroom_name:
          type: string
          example: "1"
          maxLength: 64
        hearing_start_at:
          type: string
          format: date
        hearing_end_at:
          type: string
          format: date

    AdminCasesSearchResponseItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: Unique case identifier, used internally by DARTS.
        case_number:
          type: string
          example: C20220620001
          description: 'Case Number'
        courthouse:
          $ref: '#/components/schemas/CourthouseResponseObject'
        courtrooms:
          type: array
          items:
            $ref: '#/components/schemas/CourtroomResponseObject'
        judges:
          type: array
          items:
            $ref: '#/components/schemas/judge'
        defendants:
          type: array
          items:
            $ref: '#/components/schemas/defendant'
        is_data_anonymised:
          $ref: '#/components/schemas/IsDataAnonymised'
        data_anonymised_at:
          $ref: '#/components/schemas/DataAnonymisedAt'

    CourthouseResponseObject:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: the courthouse ID
        display_name:
          type: string
          example: Swansea

    CourtroomResponseObject:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: the courtroom ID
        name:
          type: string
          example: "1"

    AdvancedSearchRequest:
      type: object
      properties:
        case_number:
          type: string
          example: 1234
          maxLength: 32
        courthouse:
          type: string
          example: Swansea
        courthouse_ids:
          type: array
          items:
            type: integer
        courtroom:
          type: string
          example: 2
          maxLength: 64
        judge_name:
          type: string
          example: Judge Walker
          maxLength: 2000
        defendant_name:
          type: string
          example: 'David Defendant'
          maxLength: 2000
        date_from:
          type: string
          format: date
        date_to:
          type: string
          format: date
        event_text_contains:
          type: string
          example: 'Event text'
          maxLength: 2000

    AdminSingleCaseResponseItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
          description: Unique case identifier, used internally by DARTS.
        courthouse:
          $ref: '#/components/schemas/CourthouseResponseObject'
        case_number:
          type: string
          example: 1234
          maxLength: 32
        defendants:
          type: array
          items:
            $ref: '#/components/schemas/defendant'
        judges:
          type: array
          items:
            $ref: '#/components/schemas/judge'
        prosecutors:
          type: array
          items:
            $ref: '#/components/schemas/prosecutor'
        defenders:
          type: array
          items:
            $ref: '#/components/schemas/defence'
        reporting_restrictions:
          $ref: './common.yaml#/components/schemas/reporting_restrictions'
        retain_until_date_time:
          type: string
          format: date-time
          example: 2030-01-31T15:42:10.361Z
        case_closed_date_time:
          type: string
          format: date-time
          example: 2023-07-20T15:42:10.361Z
        is_retention_updated:
          type: boolean
          example: false
        retention_retries:
          type: integer
          example: 0
        retention_date_time_applied:
          type: string
          format: date-time
          example: 2023-07-20T15:42:10.361Z
        retention_policy_applied:
          type: string
          example: "MANUAL"
        ret_conf_score:
          type: integer
          example: 0
        ret_conf_reason:
          type: string
        ret_conf_updated_ts:
          type: string
          format: date-time
        case_object_id:
          type: string
          example: 12345
        case_object_name:
          type: string
        case_type:
          type: string
        upload_priority:
          type: integer
        case_status:
          $ref: '#/components/schemas/CaseOpenStatusEnum'
          example: "OPEN"
        created_at:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00Z
        created_by:
          type: integer
          example: 0
        last_modified_at:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00Z
        last_modified_by:
          type: integer
          example: 0
        is_deleted:
          type: boolean
          example: false
        case_deleted_at:
          type: string
          format: date-time
          example: 2024-01-01T00:00:00Z
        case_deleted_by:
          type: integer
          example: 0
        is_data_anonymised:
          $ref: '#/components/schemas/IsDataAnonymised'
        data_anonymised_at:
          $ref: '#/components/schemas/DataAnonymisedAt'
        data_anonymised_by:
          type: integer
          example: 0
        is_interpreter_used:
          type: boolean
          example: false

    IsDataAnonymised:
      type: boolean

    DataAnonymisedAt:
      type: string
      format: date-time

    PostCasesErrorCode:
      type: string
      enum:
        - "ADD_CASE_101"
        - "ADD_CASE_102"
      x-enum-varnames: [ CASE_COURT_HOUSE_NOT_FOUND, CASE_DOCUMENT_CANT_BE_PARSED ]

    GetCasesErrorCode:
      type: string
      enum:
        - "GET_CASE_101"
      x-enum-varnames: [ CASE_COURT_HOUSE_NOT_FOUND ]

    CasesAuthorisation403ErrorCode:
      type: string
      enum:
        - "AUTHORISATION_100"
      x-enum-varnames: [ USER_NOT_AUTHORISED_FOR_COURTHOUSE ]

    CaseErrorCode:
      type: string
      enum:
        - "CASE_100"
        - "CASE_101"
        - "CASE_102"
        - "CASE_103"
        - "CASE_104"
        - "CASE_106"
        - "CASE_107"
        - "CASE_108"
      x-enum-varnames: [ TOO_MANY_RESULTS, NO_CRITERIA_SPECIFIED, CRITERIA_TOO_BROAD, INVALID_REQUEST, CASE_NOT_FOUND, PATCH_CRITERIA_NOT_MET, HEARINGS_NOT_ACTUAL, CASE_EXPIRED ]

    CaseTitleErrors:
      type: string
      enum:
        - "Too many results have been returned. Please change search criteria."
        - "No search criteria has been specified, please add at least 1 criteria to search for."
        - "Search criteria is too broad, please add at least 1 more criteria to search for."
        - "The request is not valid.."
        - "The requested case cannot be found"
        - "The request does not contain any values that are supported by the PATCH operation."
        - "The requested case does not contain any actual hearings."
        - "Case has expired."
      x-enum-varnames: [ TOO_MANY_RESULTS, NO_CRITERIA_SPECIFIED, CRITERIA_TOO_BROAD, INVALID_REQUEST, CASE_NOT_FOUND, PATCH_CRITERIA_NOT_MET, HEARINGS_NOT_ACTUAL, CASE_EXPIRED ]

    CaseOpenStatusEnum:
      type: string
      enum:
        - "OPEN"
        - "CLOSED"
      x-enum-varnames: [ OPEN, CLOSED ]
