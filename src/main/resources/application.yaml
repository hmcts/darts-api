server:
  port: 4550

management:
  endpoint:
    health:
      show-details: "always"
  endpoints:
    web:
      base-path: /
      exposure:
        include: health, info, prometheus

springdoc:
  packagesToScan: uk.gov.hmcts.darts

#If you use a database then uncomment below lines and update db properties accordingly
spring:
  config:
    import: "optional:configtree:/mnt/secrets/darts/"
  application:
    name: Darts Api
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: https://hmctsdartsb2csbox.b2clogin.com/hmctsdartsb2csbox.onmicrosoft.com/B2C_1_darts_externaluser_signin/discovery/v2.0/keys
      client:
        registration:
          external-azure-ad:
            client-id: ${AAD_B2C_CLIENT_ID_KEY:00000000-0000-0000-0000-000000000000}
            client-secret: ${AAD_B2C_CLIENT_SECRET_KEY:}
            scope: openid
            redirect-uri: https://darts-portal.staging.platform.hmcts.net/auth/callback
            authorization-grant-type: authorization_code
            response-type: code
            response-mode: form_post
            prompt: login
            issuer-uri: "https://hmctsdartsb2csbox.b2clogin.com/${AAD_B2C_TENANT_ID_KEY:00000000-0000-0000-0000-000000000000}/v2.0/"
            provider: external-azure-ad-provider
          internal-azure-ad:
            client-id: ${AAD_B2C_CLIENT_ID_KEY:00000000-0000-0000-0000-000000000000}
            client-secret: ${AAD_B2C_CLIENT_SECRET_KEY:}
            scope: openid
            redirect-uri: http://localhost:4550/external-user/handle-oauth-code
            authorization-grant-type: authorization_code
            response-type: code
            response-mode: form_post
            prompt: login
            issuer-uri: https://hmctsdartsb2csbox.b2clogin.com/${AAD_B2C_TENANT_ID_KEY:00000000-0000-0000-0000-000000000000}/v2.0/
            provider: internal-azure-ad-provider
        provider:
          external-azure-ad-provider:
            authorization-uri: https://hmctsdartsb2csbox.b2clogin.com/hmctsdartsb2csbox.onmicrosoft.com/B2C_1_darts_externaluser_signin/oauth2/v2.0/authorize
            token-uri: https://hmctsdartsb2csbox.b2clogin.com/hmctsdartsb2csbox.onmicrosoft.com/B2C_1_darts_externaluser_signin/oauth2/v2.0/token
            jwk-set-uri: https://hmctsdartsb2csbox.b2clogin.com/hmctsdartsb2csbox.onmicrosoft.com/B2C_1_darts_externaluser_signin/discovery/v2.0/keys
          internal-azure-ad-provider:
            authorization-uri: https://hmctsdartsb2csbox.b2clogin.com/hmctsdartsb2csbox.onmicrosoft.com/B2C_1_darts_externaluser_signin/oauth2/v2.0/authorize
            token-uri: https://hmctsdartsb2csbox.b2clogin.com/hmctsdartsb2csbox.onmicrosoft.com/B2C_1_darts_externaluser_signin/oauth2/v2.0/token
            jwk-set-uri: https://hmctsdartsb2csbox.b2clogin.com/hmctsdartsb2csbox.onmicrosoft.com/B2C_1_darts_externaluser_signin/discovery/v2.0/keys

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DARTS_API_DB_HOST:localhost}:5432/${DARTS_API_DB_NAME:darts}${DARTS_API_DB_OPTIONS:}
    username: ${DARTS_API_DB_USERNAME:darts}
    password: ${DARTS_API_DB_PASSWORD:darts}
    type: com.zaxxer.hikari.HikariDataSource
  jpa:
    database: postgresql
    show-sql: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            # silence the 'wall-of-text' - unnecessary exception throw about blob types
            non_contextual_creation: true
          time_zone: UTC
      org:
        hibernate:
          envers:
            audit_table_suffix: _audit
            store_data_at_delete: true
    flyway:
      out-of-order: true
      ignore-missing-migrations: true

  flyway.enabled: ${ENABLE_DB_MIGRATE:true}
  flyway.locations: classpath:db/migration

darts:
  audio:
    ffmpeg-executable: ffmpeg
    concat-workspace: ${user.home}/audiotransform/concatenate
    merge-workspace: ${user.home}/audiotransform/merge
    trim-workspace: ${user.home}/audiotransform/trim
    re-encode-workspace: ${user.home}/audiotransform/encode
  gateway:
    url: ${DARTS_GATEWAY_URL:http://localhost:8070}
    events-dar-notify-path: /events/dar-notify
  notification:
    scheduler:
      cron: ${NOTIFICATION_SCHEDULER_CRON:3 */2 * * * MON-FRI}
    max_retry_attempts: 3
    gov-notify:
      api-key: ${GOVUK_NOTIFY_API_KEY:00000000-0000-0000-0000-000000000000}
      template-map:
        audio_request_being_processed: 3481f194-53da-4fa9-866a-15ff73e6dab4
        court_manager_approve_transcript: 2f9e18b5-5046-44c2-8abd-e4ff15008a60
        request_to_transcriber: 976bf288-705d-4cbb-b24f-c5529abf14cf
        requested_audio_is_available: 66a1864f-24a6-469a-ac55-66bc57c7e4f6
        transcription_available: a928742c-5eb7-46f0-9f61-d89d5394785c
        transcription_request_approved: 29c26992-df77-4ba6-8ba7-03324eb5ae37
        transcription_request_rejected: 739a31cf-13a1-49bc-bcf9-0794f4670dbb

dbMigration:
  # When true, the app will run DB migration on startup.
  # Otherwise, it will just check if all migrations have been applied (and fail to start if not).
  runOnStartup: ${RUN_DB_MIGRATION_ON_STARTUP:true}
