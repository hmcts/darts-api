package uk.gov.hmcts.darts.event.controller;

import org.hamcrest.Matchers;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.EnumSource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.test.web.servlet.ResultActions;
import org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder;
import uk.gov.hmcts.darts.common.enums.SecurityRoleEnum;
import uk.gov.hmcts.darts.testutils.GivenBuilder;
import uk.gov.hmcts.darts.testutils.IntegrationBase;

import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.jsonPath;
import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;

@AutoConfigureMockMvc
class EventControllerGetEventMappingsTest extends IntegrationBase {

    private static final String EVENT_MAPPINGS_ENDPOINT = "/admin/event-mappings";

    @Autowired
    private transient MockMvc mockMvc;

    @Autowired
    private GivenBuilder given;

    @ParameterizedTest
    @EnumSource(value = SecurityRoleEnum.class, names = {"SUPER_ADMIN", "SUPER_USER"}, mode = EnumSource.Mode.INCLUDE)
    void allowSuperAdminSuperUserToGetEventMappings(SecurityRoleEnum role) throws Exception {
        given.anAuthenticatedUserWithGlobalAccessAndRole(role);

        MockHttpServletRequestBuilder requestBuilder = get(EVENT_MAPPINGS_ENDPOINT);

        ResultActions resultActions = mockMvc.perform(requestBuilder).andExpect(status().isOk())
            .andExpect(jsonPath("$[0].id", Matchers.is(269)))
            .andExpect(jsonPath("$[0].type", Matchers.is("40750")))
            .andExpect(jsonPath("$[0].sub_type", Matchers.is("13507")))
            .andExpect(jsonPath("$[0].name", Matchers.is("(Extended Discretional 18 to 20)   Section 266")))
            .andExpect(jsonPath("$[0].handler", Matchers.is("SentencingRemarksAndRetentionPolicyHandler")))
            .andExpect(jsonPath("$[0].is_active", Matchers.is(true)))
            .andExpect(jsonPath("$[0].has_restrictions", Matchers.is(false)))
            .andExpect(jsonPath("$[0].created_at").exists());

        //Validate correct order of returned items
        resultActions.andExpect(jsonPath("$[0].name", Matchers.is("(Extended Discretional 18 to 20)   Section 266")))
            .andExpect(jsonPath("$[1].name", Matchers.is("(Extended Discretional 18 to 20)   Section 266")))
            .andExpect(jsonPath("$[2].name", Matchers.is("(Extended Discretional 18 to 20)   Section 266")))
            .andExpect(jsonPath("$[3].name", Matchers.is("(Extended Discretional 18 to 20)   Section 266")))
            .andExpect(jsonPath("$[4].name", Matchers.is("(Extended Discretional 18 to 20)   Section 266")))
            .andExpect(jsonPath("$[5].name", Matchers.is("(Extended Discretional over 21)")))
            .andExpect(jsonPath("$[6].name", Matchers.is("(Extended Discretional over 21)")))
            .andExpect(jsonPath("$[7].name", Matchers.is("(Extended Discretional over 21)")))
            .andExpect(jsonPath("$[8].name", Matchers.is("(Extended Discretional over 21)")))
            .andExpect(jsonPath("$[9].name", Matchers.is("(Extended Discretional over 21)")))
            .andExpect(jsonPath("$[10].name", Matchers.is("7/14 day orders")))
            .andExpect(jsonPath("$[11].name", Matchers.is("<Sentence remarks filmed>")))
            .andExpect(jsonPath("$[12].name", Matchers.is("<Sentence remarks not filmed>")))
            .andExpect(jsonPath("$[13].name", Matchers.is("Acceptable guilty plea(s) entered late to some or all charges " +
             "/ counts on the charge sheet, offered for the first time by the defence.")))
            .andExpect(jsonPath("$[14].name", Matchers.is("Acceptable guilty plea(s) entered late to some or all charges " +
             "/ counts on the charge sheet, previously rejected by the prosecution.")))
            .andExpect(jsonPath("$[15].name", Matchers.is("Acceptable guilty plea(s) to alternative new charge (not previously on the charge sheet)," +
             " first offered by defence.")))
            .andExpect(jsonPath("$[16].name", Matchers.is("Acceptable guilty plea(s) to alternative new charge (not previously on the charge sheet)," +
             " previously rejected by the prosecution.")))
            .andExpect(jsonPath("$[17].name", Matchers.is("Adjourned for pre-sentence report")))
            .andExpect(jsonPath("$[18].name", Matchers.is("Admitted ( Bail Act Offence)")))
            .andExpect(jsonPath("$[19].name", Matchers.is("An order made under s45 of the Youth Justice and Criminal Evidence Act 1999")))
            .andExpect(jsonPath("$[20].name", Matchers.is("An order made under s45a of the Youth Justice and Criminal Evidence Act 1999")))
            .andExpect(jsonPath("$[21].name", Matchers.is("An order made under s46 of the Youth Justice and Criminal Evidence Act 1999")))
            .andExpect(jsonPath("$[22].name", Matchers.is("An order made under s49 of the Children and Young Persons Act 1933")))
            .andExpect(jsonPath("$[23].name", Matchers.is("Another case over-ran")))
            .andExpect(jsonPath("$[24].name", Matchers.is("Appeal interpreter sworn in")))
            .andExpect(jsonPath("$[25].name", Matchers.is("Appeal witness continues")))
            .andExpect(jsonPath("$[26].name", Matchers.is("Appeal witness released")))
            .andExpect(jsonPath("$[27].name", Matchers.is("Appeal witness sworn in")))
            .andExpect(jsonPath("$[28].name", Matchers.is("Appellant Read")))
            .andExpect(jsonPath("$[29].name", Matchers.is("Appellant Read")))
            .andExpect(jsonPath("$[30].name", Matchers.is("Appellant attendance")))
            .andExpect(jsonPath("$[31].name", Matchers.is("Appellant case closed")))
            .andExpect(jsonPath("$[32].name", Matchers.is("Appellant case opened")))
            .andExpect(jsonPath("$[33].name", Matchers.is("Appellant submissions")))
            .andExpect(jsonPath("$[34].name", Matchers.is("Application to stand out")))
            .andExpect(jsonPath("$[35].name", Matchers.is("Application: Fitness to plead")))
            .andExpect(jsonPath("$[36].name", Matchers.is("Application: Goodyear indication")))
            .andExpect(jsonPath("$[37].name", Matchers.is("Application: No case to answer")))
            .andExpect(jsonPath("$[38].name", Matchers.is("Archive Case")))
            .andExpect(jsonPath("$[39].name", Matchers.is("Bail Conditions Ceased - defendant deceased")))
            .andExpect(jsonPath("$[40].name", Matchers.is("Bail Conditions Ceased - non-custodial sentence imposed")))
            .andExpect(jsonPath("$[41].name", Matchers.is("Bail Conditions Ceased - sentence deferred")))
            .andExpect(jsonPath("$[42].name", Matchers.is("Bail and custody")))
            .andExpect(jsonPath("$[43].name", Matchers.is("Bail as before")))
            .andExpect(jsonPath("$[44].name", Matchers.is("Bail varied")))
            .andExpect(jsonPath("$[45].name", Matchers.is("Bench Warrant Executed")))
            .andExpect(jsonPath("$[46].name", Matchers.is("Bench Warrant Issued")))
            .andExpect(jsonPath("$[47].name", Matchers.is("Bench retires")))
            .andExpect(jsonPath("$[48].name", Matchers.is("Bench warrant")))
            .andExpect(jsonPath("$[49].name", Matchers.is("CPP Daily List")))
            .andExpect(jsonPath("$[50].name", Matchers.is("Case called on")))
            .andExpect(jsonPath("$[51].name", Matchers.is("Case closed")))
            .andExpect(jsonPath("$[52].name", Matchers.is("Case not reached / insufficient cases drop out / floater not reached")))
            .andExpect(jsonPath("$[53].name", Matchers.is("Case not reserved")))
            .andExpect(jsonPath("$[54].name", Matchers.is("Case reserved")))
            .andExpect(jsonPath("$[55].name", Matchers.is("Case to be listed")))
            .andExpect(jsonPath("$[56].name", Matchers.is("Case to be listed")))
            .andExpect(jsonPath("$[57].name", Matchers.is("Certify readiness for trial")))
            .andExpect(jsonPath("$[58].name", Matchers.is("Cracked or ineffective trial")))
            .andExpect(jsonPath("$[59].name", Matchers.is("Custody for Life")))
            .andExpect(jsonPath("$[60].name", Matchers.is("Custody for Life")))
            .andExpect(jsonPath("$[61].name", Matchers.is("Custody for Life")))
            .andExpect(jsonPath("$[62].name", Matchers.is("Custody for Life")))
            .andExpect(jsonPath("$[63].name", Matchers.is("Daily List")))
            .andExpect(jsonPath("$[64].name", Matchers.is("Defence addresses judge")))
            .andExpect(jsonPath("$[65].name", Matchers.is("Defence advocate engaged in other trial")))
            .andExpect(jsonPath("$[66].name", Matchers.is("Defence advocate failed to attend")))
            .andExpect(jsonPath("$[67].name", Matchers.is("Defence application")))
            .andExpect(jsonPath("$[68].name", Matchers.is("Defence application")))
            .andExpect(jsonPath("$[69].name", Matchers.is("Defence application: Adjourn")))
            .andExpect(jsonPath("$[70].name", Matchers.is("Defence application: Break fixture")))
            .andExpect(jsonPath("$[71].name", Matchers.is("Defence asked for additional prosecution witness toattend")))
            .andExpect(jsonPath("$[72].name", Matchers.is("Defence case closed")))
            .andExpect(jsonPath("$[73].name", Matchers.is("Defence case opened")))
            .andExpect(jsonPath("$[74].name", Matchers.is("Defence closed case")))
            .andExpect(jsonPath("$[75].name", Matchers.is("Defence closing speech")))
            .andExpect(jsonPath("$[76].name", Matchers.is("Defence dismissed advocate")))
            .andExpect(jsonPath("$[77].name", Matchers.is("Defence gave closing speech")))
            .andExpect(jsonPath("$[78].name", Matchers.is("Defence increased time estimate - insufficient time for trial to start")))
            .andExpect(jsonPath("$[79].name", Matchers.is("Defence not ready: disclosure problems")))
            .andExpect(jsonPath("$[80].name", Matchers.is("Defence not ready: specify in comments (inc. no instructions)")))
            .andExpect(jsonPath("$[81].name", Matchers.is("Defence opened case")))
            .andExpect(jsonPath("$[82].name", Matchers.is("Defence responded")))
            .andExpect(jsonPath("$[83].name", Matchers.is("Defence witness absent")))
            .andExpect(jsonPath("$[84].name", Matchers.is("Defendant Read")))
            .andExpect(jsonPath("$[85].name", Matchers.is("Defendant Read")))
            .andExpect(jsonPath("$[86].name", Matchers.is("Defendant absent - did not proceed in absence (judicial discretion)")))
            .andExpect(jsonPath("$[87].name", Matchers.is("Defendant absent - unable to proceed as defendant not notified of place and time of hearing")))
            .andExpect(jsonPath("$[88].name", Matchers.is("Defendant arraigned")))
            .andExpect(jsonPath("$[89].name", Matchers.is("Defendant attendance")))
            .andExpect(jsonPath("$[90].name", Matchers.is("Defendant bound over, acceptable to prosecution - offered for the first by the defence.")))
            .andExpect(jsonPath("$[91].name", Matchers.is("Defendant bound over, now acceptable to prosecution - previously rejected by the prosecution")))
            .andExpect(jsonPath("$[92].name", Matchers.is("Defendant continued")))
            .andExpect(jsonPath("$[93].name", Matchers.is("Defendant cross-examined Defence")))
            .andExpect(jsonPath("$[94].name", Matchers.is("Defendant cross-examined by Prosecution")))
            .andExpect(jsonPath("$[95].name", Matchers.is("Defendant deceased")))
            .andExpect(jsonPath("$[96].name", Matchers.is("Defendant disqualified from working with children for life (Defendant over 18)")))
            .andExpect(jsonPath("$[97].name", Matchers.is("Defendant disqualified from working with children for life (Defendant under 18)")))
            .andExpect(jsonPath("$[98].name", Matchers.is("Defendant examination in-chief")))
            .andExpect(jsonPath("$[99].name", Matchers.is("Defendant identified")))
            .andExpect(jsonPath("$[100].name", Matchers.is("Defendant ill or otherwise unfit to proceed")))
            .andExpect(jsonPath("$[101].name", Matchers.is("Defendant not produced by PECS")))
            .andExpect(jsonPath("$[102].name", Matchers.is("Defendant ordered to be electronically monitored")))
            .andExpect(jsonPath("$[103].name", Matchers.is("Defendant questioned by Judge")))
            .andExpect(jsonPath("$[104].name", Matchers.is("Defendant rearraigned")))
            .andExpect(jsonPath("$[105].name", Matchers.is("Defendant recalled")))
            .andExpect(jsonPath("$[106].name", Matchers.is("Defendant released")))
            .andExpect(jsonPath("$[107].name", Matchers.is("Defendant subject to an electronically monitored curfew")))
            .andExpect(jsonPath("$[108].name", Matchers.is("Defendant sworn-in")))
            .andExpect(jsonPath("$[109].name", Matchers.is("Delete Offence Level Appeal Result")))
            .andExpect(jsonPath("$[110].name", Matchers.is("Delete end hearing")))
            .andExpect(jsonPath("$[111].name", Matchers.is("Detained During Her Majestys Pleasure")))
            .andExpect(jsonPath("$[112].name", Matchers.is("Detained During Her Majestys Pleasure")))
            .andExpect(jsonPath("$[113].name", Matchers.is("Detained During Her Majestys Pleasure")))
            .andExpect(jsonPath("$[114].name", Matchers.is("Detained During Her Majestys Pleasure")))
            .andExpect(jsonPath("$[115].name", Matchers.is("Detention for Life under s226 (u18)")))
            .andExpect(jsonPath("$[116].name", Matchers.is("Detention for Life under s226 (u18)")))
            .andExpect(jsonPath("$[117].name", Matchers.is("Detention for Life under s226 (u18)")))
            .andExpect(jsonPath("$[118].name", Matchers.is("Detention for Life under s226 (u18)")))
            .andExpect(jsonPath("$[119].name", Matchers.is("Detention for life (youth) for manslaughter of an emergency worker")))
            .andExpect(jsonPath("$[120].name", Matchers.is("Detention for life (youth) for manslaughter of an emergency worker")))
            .andExpect(jsonPath("$[121].name", Matchers.is("Detention for life (youth) for manslaughter of an emergency worker")))
            .andExpect(jsonPath("$[122].name", Matchers.is("Detention for life (youth) for manslaughter of an emergency worker")))
            .andExpect(jsonPath("$[123].name", Matchers.is("Detention for life (youth) for manslaughter of an emergency worker")))
            .andExpect(jsonPath("$[124].name", Matchers.is("Detention in Y.O.I. - Extended under s235A CJA2003")))
            .andExpect(jsonPath("$[125].name", Matchers.is("Detention in Y.O.I. - Extended under s235A CJA2003")))
            .andExpect(jsonPath("$[126].name", Matchers.is("Detention in Y.O.I. - Extended under s235A CJA2003")))
            .andExpect(jsonPath("$[127].name", Matchers.is("Detention in Y.O.I. - Extended under s235A CJA2003")))
            .andExpect(jsonPath("$[128].name", Matchers.is("Directions form completed")))
            .andExpect(jsonPath("$[129].name", Matchers.is("Discussion on basis of plea")))
            .andExpect(jsonPath("$[130].name", Matchers.is("Discussion on contempt of court issues")))
            .andExpect(jsonPath("$[131].name", Matchers.is("Discussion on directions to be given to the jury")))
            .andExpect(jsonPath("$[132].name", Matchers.is("Discussion on ground rules")))
            .andExpect(jsonPath("$[133].name", Matchers.is("Discussion on juror irregularity")))
            .andExpect(jsonPath("$[134].name", Matchers.is("Disqualification Order (from working with children) – ADULTS")))
            .andExpect(jsonPath("$[135].name", Matchers.is("Disqualification Order (from working with children) – ADULTS")))
            .andExpect(jsonPath("$[136].name", Matchers.is("Disqualification Order (from working with children) – ADULTS")))
            .andExpect(jsonPath("$[137].name", Matchers.is("Disqualification Order (from working with children) – ADULTS")))
            .andExpect(jsonPath("$[138].name", Matchers.is("Disqualification Order (from working with children) – JUVENILES")))
            .andExpect(jsonPath("$[139].name", Matchers.is("Disqualification Order (from working with children) – JUVENILES")))
            .andExpect(jsonPath("$[140].name", Matchers.is("Disqualification Order (from working with children) – JUVENILES")))
            .andExpect(jsonPath("$[141].name", Matchers.is("Disqualification Order (from working with children) – JUVENILES")))
            .andExpect(jsonPath("$[142].name", Matchers.is("Disqualification from driving removed (3076)")))
            .andExpect(jsonPath("$[143].name", Matchers.is("Driving disqualification suspended pending appeal subsequent to imposition (3075)")))
            .andExpect(jsonPath("$[144].name", Matchers.is("Effective Trial.")))
            .andExpect(jsonPath("$[145].name", Matchers.is("Electronic monitoring requirement amended")))
            .andExpect(jsonPath("$[146].name", Matchers.is("Electronic monitoring/tag to be removed")))
            .andExpect(jsonPath("$[147].name", Matchers.is("Equipment / accommodation")))
            .andExpect(jsonPath("$[148].name", Matchers.is("Freetext")))
            .andExpect(jsonPath("$[149].name", Matchers.is("Guilty")))
            .andExpect(jsonPath("$[150].name", Matchers.is("Hearing ended")))
            .andExpect(jsonPath("$[151].name", Matchers.is("Hearing ended")))
            .andExpect(jsonPath("$[152].name", Matchers.is("Hearing ended")))
            .andExpect(jsonPath("$[153].name", Matchers.is("Hearing paused")))
            .andExpect(jsonPath("$[154].name", Matchers.is("Hearing resumed")))
            .andExpect(jsonPath("$[155].name", Matchers.is("Hearing started")))
            .andExpect(jsonPath("$[156].name", Matchers.is("INDET: Indeterminate Sentence of Detention for Public Protection")))
            .andExpect(jsonPath("$[157].name", Matchers.is("INDET: Indeterminate Sentence of Detention for Public Protection")))
            .andExpect(jsonPath("$[158].name", Matchers.is("INDET: Indeterminate Sentence of Detention for Public Protection")))
            .andExpect(jsonPath("$[159].name", Matchers.is("INDET: Indeterminate Sentence of Detention for Public Protection")))
            .andExpect(jsonPath("$[160].name", Matchers.is("INIMP: Indeterminate Sentence of Imprisonment for Public Protection")))
            .andExpect(jsonPath("$[161].name", Matchers.is("INIMP: Indeterminate Sentence of Imprisonment for Public Protection")))
            .andExpect(jsonPath("$[162].name", Matchers.is("INIMP: Indeterminate Sentence of Imprisonment for Public Protection")))
            .andExpect(jsonPath("$[163].name", Matchers.is("INIMP: Indeterminate Sentence of Imprisonment for Public Protection")))
            .andExpect(jsonPath("$[164].name", Matchers.is("Imprisonment - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[165].name", Matchers.is("Imprisonment - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[166].name", Matchers.is("Imprisonment - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[167].name", Matchers.is("Imprisonment - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[168].name", Matchers.is("Imprisonment - Minimum Imposed after 3 strikes (Young Offender) - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[169].name", Matchers.is("Imprisonment - Minimum Imposed after 3 strikes (Young Offender) - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[170].name", Matchers.is("Imprisonment - Minimum Imposed after 3 strikes (Young Offender) - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[171].name", Matchers.is("Imprisonment - Minimum Imposed after 3 strikes (Young Offender) - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[172].name", Matchers.is("Imprisonment - Minimum Imposed after 3 strikes - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[173].name", Matchers.is("Imprisonment - Minimum Imposed after 3 strikes - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[174].name", Matchers.is("Imprisonment - Minimum Imposed after 3 strikes - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[175].name", Matchers.is("Imprisonment - Minimum Imposed after 3 strikes - Extended under s236A CJA2003")))
            .andExpect(jsonPath("$[176].name", Matchers.is("Imprisonment for life (adult) for manslaughter of an emergency worker")))
            .andExpect(jsonPath("$[177].name", Matchers.is("Imprisonment for life (adult) for manslaughter of an emergency worker")))
            .andExpect(jsonPath("$[178].name", Matchers.is("Imprisonment for life (adult) for manslaughter of an emergency worker")))
            .andExpect(jsonPath("$[179].name", Matchers.is("Imprisonment for life (adult) for manslaughter of an emergency worker")))
            .andExpect(jsonPath("$[180].name", Matchers.is("Imprisonment for life (adult) for manslaughter of an emergency worker")))
            .andExpect(jsonPath("$[181].name", Matchers.is("Indictment to be filed")))
            .andExpect(jsonPath("$[182].name", Matchers.is("Insufficient jurors available")))
            .andExpect(jsonPath("$[183].name", Matchers.is("Intermediatory sworn-in")))
            .andExpect(jsonPath("$[184].name", Matchers.is("Interpreter Read")))
            .andExpect(jsonPath("$[185].name", Matchers.is("Interpreter Read")))
            .andExpect(jsonPath("$[186].name", Matchers.is("Interpreter sworn-in")))
            .andExpect(jsonPath("$[187].name", Matchers.is("Interpretor sworn")))
            .andExpect(jsonPath("$[188].name", Matchers.is("Join indictments")))
            .andExpect(jsonPath("$[189].name", Matchers.is("Judge / magistrate availability")))
            .andExpect(jsonPath("$[190].name", Matchers.is("Judge addresses advocate")))
            .andExpect(jsonPath("$[191].name", Matchers.is("Judge directed Defence counsel to obtain a report")))
            .andExpect(jsonPath("$[192].name", Matchers.is("Judge directed Defence to obtain a medical report")))
            .andExpect(jsonPath("$[193].name", Matchers.is("Judge directed Defence to obtain a psychiatric report")))
            .andExpect(jsonPath("$[194].name", Matchers.is("Judge directed Prosecution to obtain a report")))
            .andExpect(jsonPath("$[195].name", Matchers.is("Judge directed defendant")))
            .andExpect(jsonPath("$[196].name", Matchers.is("Judge directed jury")))
            .andExpect(jsonPath("$[197].name", Matchers.is("Judge directed on reporting restrictions")))
            .andExpect(jsonPath("$[198].name", Matchers.is("Judge gave a majority direction")))
            .andExpect(jsonPath("$[199].name", Matchers.is("Judge passed sentence")))
            .andExpect(jsonPath("$[200].name", Matchers.is("Judge sentences")))
            .andExpect(jsonPath("$[201].name", Matchers.is("Judge summing-up")))
            .andExpect(jsonPath("$[202].name", Matchers.is("Judges ruling")))
            .andExpect(jsonPath("$[203].name", Matchers.is("Judges ruling")))
            .andExpect(jsonPath("$[204].name", Matchers.is("Juror discharged")))
            .andExpect(jsonPath("$[205].name", Matchers.is("Jury discharged")))
            .andExpect(jsonPath("$[206].name", Matchers.is("Jury gave verdict")))
            .andExpect(jsonPath("$[207].name", Matchers.is("Jury in")))
            .andExpect(jsonPath("$[208].name", Matchers.is("Jury out")))
            .andExpect(jsonPath("$[209].name", Matchers.is("Jury out")))
            .andExpect(jsonPath("$[210].name", Matchers.is("Jury retire")))
            .andExpect(jsonPath("$[211].name", Matchers.is("Jury retired")))
            .andExpect(jsonPath("$[212].name", Matchers.is("Jury returned")))
            .andExpect(jsonPath("$[213].name", Matchers.is("Jury returns")))
            .andExpect(jsonPath("$[214].name", Matchers.is("Jury sworn in")))
            .andExpect(jsonPath("$[215].name", Matchers.is("Jury sworn-in")))
            .andExpect(jsonPath("$[216].name", Matchers.is("Jury/Juror discharged")))
            .andExpect(jsonPath("$[217].name", Matchers.is("LOG")))
            .andExpect(jsonPath("$[218].name", Matchers.is("Life Imprisonment")))
            .andExpect(jsonPath("$[219].name", Matchers.is("Life Imprisonment")))
            .andExpect(jsonPath("$[220].name", Matchers.is("Life Imprisonment")))
            .andExpect(jsonPath("$[221].name", Matchers.is("Life Imprisonment")))
            .andExpect(jsonPath("$[222].name", Matchers.is("Life Imprisonment (with minimum period)")))
            .andExpect(jsonPath("$[223].name", Matchers.is("Life Imprisonment (with minimum period)")))
            .andExpect(jsonPath("$[224].name", Matchers.is("Life Imprisonment (with minimum period)")))
            .andExpect(jsonPath("$[225].name", Matchers.is("Life Imprisonment (with minimum period)")))
            .andExpect(jsonPath("$[226].name", Matchers.is("List from plea and direction hearing")))
            .andExpect(jsonPath("$[227].name", Matchers.is("Long adjournment")))
            .andExpect(jsonPath("$[228].name", Matchers.is("Maintain charges")))
            .andExpect(jsonPath("$[229].name", Matchers.is("Mandatory Life Sentence for Second Listed Offence")))
            .andExpect(jsonPath("$[230].name", Matchers.is("Mandatory Life Sentence for Second Listed Offence")))
            .andExpect(jsonPath("$[231].name", Matchers.is("Mandatory Life Sentence for Second Listed Offence")))
            .andExpect(jsonPath("$[232].name", Matchers.is("Mandatory Life Sentence for Second Listed Offence")))
            .andExpect(jsonPath("$[233].name", Matchers.is("Mandatory Life Sentence for Second Listed Offence (Young Offender)")))
            .andExpect(jsonPath("$[234].name", Matchers.is("Mandatory Life Sentence for Second Listed Offence (Young Offender)")))
            .andExpect(jsonPath("$[235].name", Matchers.is("Mandatory Life Sentence for Second Listed Offence (Young Offender)")))
            .andExpect(jsonPath("$[236].name", Matchers.is("Mandatory Life Sentence for Second Listed Offence (Young Offender)")))
            .andExpect(jsonPath("$[237].name", Matchers.is("Mandatory Life Sentence for Second Serious Offence")))
            .andExpect(jsonPath("$[238].name", Matchers.is("Mandatory Life Sentence for Second Serious Offence")))
            .andExpect(jsonPath("$[239].name", Matchers.is("Mandatory Life Sentence for Second Serious Offence")))
            .andExpect(jsonPath("$[240].name", Matchers.is("Mandatory Life Sentence for Second Serious Offence")))
            .andExpect(jsonPath("$[241].name", Matchers.is("Mandatory Life Sentence for Second Serious Offence (Young Offender)")))
            .andExpect(jsonPath("$[242].name", Matchers.is("Mandatory Life Sentence for Second Serious Offence (Young Offender)")))
            .andExpect(jsonPath("$[243].name", Matchers.is("Mandatory Life Sentence for Second Serious Offence (Young Offender)")))
            .andExpect(jsonPath("$[244].name", Matchers.is("Mandatory Life Sentence for Second Serious Offence (Young Offender)")))
            .andExpect(jsonPath("$[245].name", Matchers.is("Mitigation")))
            .andExpect(jsonPath("$[246].name", Matchers.is("New Case")))
            .andExpect(jsonPath("$[247].name", Matchers.is("No interpreter available")))
            .andExpect(jsonPath("$[248].name", Matchers.is("Not Admitted ( Bail Act Offence)")))
            .andExpect(jsonPath("$[249].name", Matchers.is("Offences put to defendant")))
            .andExpect(jsonPath("$[250].name", Matchers.is("Other application")))
            .andExpect(jsonPath("$[251].name", Matchers.is("Outstanding committals in a Crown Court centre")))
            .andExpect(jsonPath("$[252].name", Matchers.is("Outstanding committals in a magistrates court")))
            .andExpect(jsonPath("$[253].name", Matchers.is("Plea")))
            .andExpect(jsonPath("$[254].name", Matchers.is("Plea")))
            .andExpect(jsonPath("$[255].name", Matchers.is("Plea")))
            .andExpect(jsonPath("$[256].name", Matchers.is("Plea")))
            .andExpect(jsonPath("$[257].name", Matchers.is("Point of law raised")))
            .andExpect(jsonPath("$[258].name", Matchers.is("Probation gave oral PSR")))
            .andExpect(jsonPath("$[259].name", Matchers.is("Proceedings in chambers")))
            .andExpect(jsonPath("$[260].name", Matchers.is("Prosecution addresses judge")))
            .andExpect(jsonPath("$[261].name", Matchers.is("Prosecution advocate engaged in another trial")))
            .andExpect(jsonPath("$[262].name", Matchers.is("Prosecution advocate failed to attend")))
            .andExpect(jsonPath("$[263].name", Matchers.is("Prosecution application")))
            .andExpect(jsonPath("$[264].name", Matchers.is("Prosecution application")))
            .andExpect(jsonPath("$[265].name", Matchers.is("Prosecution application: Adjourn")))
            .andExpect(jsonPath("$[266].name", Matchers.is("Prosecution application: Break fixture")))
            .andExpect(jsonPath("$[267].name", Matchers.is("Prosecution case closed")))
            .andExpect(jsonPath("$[268].name", Matchers.is("Prosecution closed case")))
            .andExpect(jsonPath("$[269].name", Matchers.is("Prosecution closing speech")))
            .andExpect(jsonPath("$[270].name", Matchers.is("Prosecution end case: adjournment refused")))
            .andExpect(jsonPath("$[271].name", Matchers.is("Prosecution end case: insufficient evidence")))
            .andExpect(jsonPath("$[272].name", Matchers.is("Prosecution end case: public interest grounds")))
            .andExpect(jsonPath("$[273].name", Matchers.is("Prosecution end case: witness absent / withdrawn")))
            .andExpect(jsonPath("$[274].name", Matchers.is("Prosecution failed to disclose unused material")))
            .andExpect(jsonPath("$[275].name", Matchers.is("Prosecution gave closing speech")))
            .andExpect(jsonPath("$[276].name", Matchers.is("Prosecution increased time estimate - insufficient time for trail to start")))
            .andExpect(jsonPath("$[277].name", Matchers.is("Prosecution not ready: served late notice of additional evidence on defence")))
            .andExpect(jsonPath("$[278].name", Matchers.is("Prosecution not ready: specify in comments")))
            .andExpect(jsonPath("$[279].name", Matchers.is("Prosecution opened")))
            .andExpect(jsonPath("$[280].name", Matchers.is("Prosecution opening")))
            .andExpect(jsonPath("$[281].name", Matchers.is("Prosecution responded")))
            .andExpect(jsonPath("$[282].name", Matchers.is("Prosecution witness absent: other")))
            .andExpect(jsonPath("$[283].name", Matchers.is("Prosecution witness absent: police")))
            .andExpect(jsonPath("$[284].name", Matchers.is("Prosecution witness absent: professional / expert")))
            .andExpect(jsonPath("$[285].name", Matchers.is("Re-examination")))
            .andExpect(jsonPath("$[286].name", Matchers.is("Re-examination")))
            .andExpect(jsonPath("$[287].name", Matchers.is("Recommended for Deportation")))
            .andExpect(jsonPath("$[288].name", Matchers.is("Remanded in Custody")))
            .andExpect(jsonPath("$[289].name", Matchers.is("Requirement for an electronically monitored curfew removed")))
            .andExpect(jsonPath("$[290].name", Matchers.is("Respondant case closed")))
            .andExpect(jsonPath("$[291].name", Matchers.is("Respondant case opened")))
            .andExpect(jsonPath("$[292].name", Matchers.is("Restrictions lifted")))
            .andExpect(jsonPath("$[293].name", Matchers.is("Results")))
            .andExpect(jsonPath("$[294].name", Matchers.is("Resume")))
            .andExpect(jsonPath("$[295].name", Matchers.is("S226a Extended Automatic for over 18")))
            .andExpect(jsonPath("$[296].name", Matchers.is("S226a Extended Automatic for over 18")))
            .andExpect(jsonPath("$[297].name", Matchers.is("S226a Extended Automatic for over 18")))
            .andExpect(jsonPath("$[298].name", Matchers.is("S226a Extended Automatic for over 18")))
            .andExpect(jsonPath("$[299].name", Matchers.is("S226a Extended Discretional for over 18")))
            .andExpect(jsonPath("$[300].name", Matchers.is("S226a Extended Discretional for over 18")))
            .andExpect(jsonPath("$[301].name", Matchers.is("S226a Extended Discretional for over 18")))
            .andExpect(jsonPath("$[302].name", Matchers.is("S226a Extended Discretional for over 18")))
            .andExpect(jsonPath("$[303].name", Matchers.is("S226b Extended Automatic for under 18")))
            .andExpect(jsonPath("$[304].name", Matchers.is("S226b Extended Automatic for under 18")))
            .andExpect(jsonPath("$[305].name", Matchers.is("S226b Extended Automatic for under 18")))
            .andExpect(jsonPath("$[306].name", Matchers.is("S226b Extended Automatic for under 18")))
            .andExpect(jsonPath("$[307].name", Matchers.is("S226b Extended Discretional for under 18")))
            .andExpect(jsonPath("$[308].name", Matchers.is("S226b Extended Discretional for under 18")))
            .andExpect(jsonPath("$[309].name", Matchers.is("S226b Extended Discretional for under 18")))
            .andExpect(jsonPath("$[310].name", Matchers.is("S226b Extended Discretional for under 18")))
            .andExpect(jsonPath("$[311].name", Matchers.is("Section 11 of the Contempt of Court Act 1981")))
            .andExpect(jsonPath("$[312].name", Matchers.is("Section 2 of the Sexual Offenders (Amendment) Act 1992")))
            .andExpect(jsonPath("$[313].name", Matchers.is("Section 39 of the Children and Young Persons Act 1933")))
            .andExpect(jsonPath("$[314].name", Matchers.is("Section 4 of the Sexual Offenders (Amendment) Act 1976")))
            .andExpect(jsonPath("$[315].name", Matchers.is("Section 4(2) of the Contempt of Court Act 1981")))
            .andExpect(jsonPath("$[316].name", Matchers.is("Sentence Transcription Required")))
            .andExpect(jsonPath("$[317].name", Matchers.is("Sentencing")))
            .andExpect(jsonPath("$[318].name", Matchers.is("Sentencing")))
            .andExpect(jsonPath("$[319].name", Matchers.is("Sentencing")))
            .andExpect(jsonPath("$[320].name", Matchers.is("Sentencing")))
            .andExpect(jsonPath("$[321].name", Matchers.is("Sentencing")))
            .andExpect(jsonPath("$[322].name", Matchers.is("Sentencing")))
            .andExpect(jsonPath("$[323].name", Matchers.is("Sentencing - Life")))
            .andExpect(jsonPath("$[324].name", Matchers.is("Sex Offenders Register - victim over 18 years of age - for 10 years")))
            .andExpect(jsonPath("$[325].name", Matchers.is("Sex Offenders Register - victim over 18 years of age - for 3-7 years")))
            .andExpect(jsonPath("$[326].name", Matchers.is("Sex Offenders Register - victim over 18 years of age - for an indefinite period")))
            .andExpect(jsonPath("$[327].name", Matchers.is("Sex Offenders Register - victim over 18 years of age - for another period")))
            .andExpect(jsonPath("$[328].name", Matchers.is("Sex Offenders Register - victim over 18 years of age - period to be specified later")))
            .andExpect(jsonPath("$[329].name", Matchers.is("Sex Offenders Register - victim under 18 years of age - for 10 years")))
            .andExpect(jsonPath("$[330].name", Matchers.is("Sex Offenders Register - victim under 18 years of age - for 3-7 years")))
            .andExpect(jsonPath("$[331].name", Matchers.is("Sex Offenders Register - victim under 18 years of age - for an indefinite period")))
            .andExpect(jsonPath("$[332].name", Matchers.is("Sex Offenders Register - victim under 18 years of age - for another period")))
            .andExpect(jsonPath("$[333].name", Matchers.is("Sex Offenders Register - victim under 18 years of age - period to be specified later")))
            .andExpect(jsonPath("$[334].name", Matchers.is("Short adjournment")))
            .andExpect(jsonPath("$[335].name", Matchers.is("Special measures application")))
            .andExpect(jsonPath("$[336].name", Matchers.is("Summing up")))
            .andExpect(jsonPath("$[337].name", Matchers.is("Terms of electronically monitored curfew amended")))
            .andExpect(jsonPath("$[338].name", Matchers.is("Time estimate")))
            .andExpect(jsonPath("$[339].name", Matchers.is("Time estimate supplied")))
            .andExpect(jsonPath("$[340].name", Matchers.is("Unable to proceed with the trail because defendant incapable through alcohol/drugs")))
            .andExpect(jsonPath("$[341].name", Matchers.is("Unspecified event")))
            .andExpect(jsonPath("$[342].name", Matchers.is("Update Case")))
            .andExpect(jsonPath("$[343].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[344].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[345].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[346].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[347].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[348].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[349].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[350].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[351].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[352].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[353].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[354].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[355].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[356].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[357].name", Matchers.is("Verdict")))
            .andExpect(jsonPath("$[358].name", Matchers.is("Victim Personal Statement(s) read")))
            .andExpect(jsonPath("$[359].name", Matchers.is("Voir dire")))
            .andExpect(jsonPath("$[360].name", Matchers.is("Witness Read")))
            .andExpect(jsonPath("$[361].name", Matchers.is("Witness Read")))
            .andExpect(jsonPath("$[362].name", Matchers.is("Witness continued")))
            .andExpect(jsonPath("$[363].name", Matchers.is("Witness continued")))
            .andExpect(jsonPath("$[364].name", Matchers.is("Witness cross-examined by Defence")))
            .andExpect(jsonPath("$[365].name", Matchers.is("Witness cross-examined by Prosecution")))
            .andExpect(jsonPath("$[366].name", Matchers.is("Witness examination in-chief")))
            .andExpect(jsonPath("$[367].name", Matchers.is("Witness gave pre-recorded evidence")))
            .andExpect(jsonPath("$[368].name", Matchers.is("Witness questioned by Judge")))
            .andExpect(jsonPath("$[369].name", Matchers.is("Witness read")))
            .andExpect(jsonPath("$[370].name", Matchers.is("Witness recalled")))
            .andExpect(jsonPath("$[371].name", Matchers.is("Witness released")))
            .andExpect(jsonPath("$[372].name", Matchers.is("Witness released")))
            .andExpect(jsonPath("$[373].name", Matchers.is("Witness sworn in")))
            .andExpect(jsonPath("$[374].name", Matchers.is("Witness sworn-in")));
    }

    @ParameterizedTest
    @EnumSource(value = SecurityRoleEnum.class, names = {"SUPER_ADMIN", "SUPER_USER"}, mode = EnumSource.Mode.EXCLUDE)
    void disallowsAllUsersExceptSuperAdminSuperUserToGetEventMappings(SecurityRoleEnum role) throws Exception {
        given.anAuthenticatedUserWithGlobalAccessAndRole(role);

        MockHttpServletRequestBuilder requestBuilder = get(EVENT_MAPPINGS_ENDPOINT);

        mockMvc.perform(requestBuilder)
            .andExpect(status().isForbidden())
            .andReturn();
    }
}
